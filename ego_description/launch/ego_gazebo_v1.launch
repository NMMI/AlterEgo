<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="use_rviz" default="false" />
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="recording" default="false"/>
  <arg name="AlterEgo_version" default="1.0"/>
  
  <!-- launch rviz with config/urdf_cam.rviz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ego_description)/config/ego_particle.rviz" if="$(arg use_rviz)" />

  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ego_description)/worlds/ego.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="recording" value="$(arg recording)"/>
  </include>
  
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro.py --inorder '$(find ego_description)/urdf/ego_robot_gazebo.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model ego_robot -param robot_description -x -0.0 -y 0.0 -z 0.13"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
   <rosparam file="$(find ego_description)/config/ego_motors.yaml" command="load"/> 

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/ego" args="left_wheel_controller right_wheel_controller joint_state_controller"/>
  
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
  </node> 

  
  <!-- TODO: We need a launch file to launch the robot controllers -->
  
  <rosparam command="load" file="$(find ego_description)/config/compliant_config.yaml"/>
  <node pkg="plugin_manager" name="plugin_manager_node" type="plugin_manager_node" output="screen"/>

  <!-- Testing LQR Controller -->
  <param name="AlterEgoVersion" value="$(arg AlterEgo_version)"/>
  <node pkg="lqr_controller" name="lqr_control" type="lqr_controller" output="screen">
  </node>
  <node pkg="lqr_controller" name="pitch_loop" type="pitch_loop" output="screen"/>
 <node pkg="arms_inv_kin_controller" name="inv_kin_gravity_comp" type="inv_kin_gravity_comp_node" output="screen"/>  


</launch>
